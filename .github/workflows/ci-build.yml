name: CI

on:
   push:
    branches: [ master ]
   pull_request:
    branches: [ master ]
   
jobs:
  Code-Quality-Checks:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        scripts:
          - run-linter
          - check-docstyle
          - detect-dead-code
          - detect-common-errors
          - measure-cyclomatic-complexity
          - measure-maintainability-index    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Install virtualenv
      run: pip install -U pip && pip install virtualenv
    - name: ${{ matrix.scripts }}
      run: bash ${{ matrix.scripts }}.sh;
  Unit-Tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Install Test Dependencies
      run: pip install pip==19.2.3 && pip install -r requirements.txt && pip install --ignore-installed git+https://github.com/fabric8-analytics/fabric8-analytics-rudra.git@4cfac114208cd0f062a1d7ab0e03bb6bc7a490a3#egg=rudra 
    - name: Run Unit Tests
      run: DISABLE_AUTHENTICATION=1 PYTHONDONTWRITEBYTECODE=1 python "$(which pytest)" --cov=./src/ --cov-report term-missing --cov-fail-under=15 -vv ./tests/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml  
  openshift-yaml-validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install oc
      uses: redhat-actions/oc-installer@v1
      with:
        version: '4.6'
    - name: Run oc process
      run: oc process --local -f openshift/template.yaml -o yaml > blueprint.yaml
    - name: validate openshift yaml
      uses: instrumenta/kubeval-action@master
      with:
          files: blueprint.yaml
  Build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Docker Build
      run: docker build --no-cache -t tests-image -f Dockerfile . 